syntax = "proto3";

package ibc;

service Ibc {
    // Attempts to establish a connection to an IBC enabled chain
    rpc Connect (ConnectRequest) returns (ConnectResponse);

    // Sends tokens from solo machine to IBC enabled chain
    rpc SendToChain (SendToChainRequest) returns (SendToChainResponse);

    // Receives tokens from IBC enabled chain to solo machine
    rpc ReceiveFromChain (ReceiveFromChainRequest) returns (ReceiveFromChainResponse);
}

message ConnectRequest {
    // Chain ID of IBC enabled chain to connect to
    string chain_id = 1;
    // Memo value to be used in cosmos sdk transaction
    optional string memo = 2;
}

message ConnectResponse {}

message SendToChainRequest {
    // Chain ID of IBC enabled chain to send to
    string chain_id = 1;
    // Memo value to be used in cosmos sdk transaction
    optional string memo = 2;
    // Amount of tokens to be sent
    uint32 amount = 3;
    // Denom of tokens to be sent
    string denom = 4;
    // Receiver address on IBC enabled chain (if this is not provided, tokens will be sent to signer's address)
    optional string receiver_address = 5;
}

message SendToChainResponse {}

message ReceiveFromChainRequest {
    // Chain ID of IBC enabled chain to send to
    string chain_id = 1;
    // Memo value to be used in cosmos sdk transaction
    optional string memo = 2;
    // Amount of tokens to be sent
    uint32 amount = 3;
    // Denom of tokens to be sent
    string denom = 4;
    // Receiver address on IBC enabled chain (if this is not provided, tokens will be received to signer's address)
    optional string receiver_address = 5;
}

message ReceiveFromChainResponse {}
